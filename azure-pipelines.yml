# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- task*

pool:
  vmImage: 'Ubuntu-18.04'

jobs:
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: Maven@2
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'verify'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

  - deployment: VMDeploy
    displayName: web
    pool:
      vmImage: 'Ubuntu-18.04'
    environment:
      name: VM
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
            - task: Bash@3
              inputs:
                targetType: inline
                script: |
                  killall java
                  ls -alR $(Pipeline.Workspace)
                  find $(Pipeline.Workspace) -name \*.jar -exec cp {} ~/manufacturing-erp \;
                  rm ~/manufacturing-erp/*.java
                  mv ~/manufacturing-erp/application-0.0.1-SNAPSHOT.jar application.jar
                  mv ~/manufacturing-erp/service-0.0.1-SNAPSHOT.jar service.jar
                  ~/manufacturing-erp/start